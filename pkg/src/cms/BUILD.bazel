# Generated by cmake2bazel.

# Caesar Task Force@Data Storage Product Line

load ("//:global_options.bzl","GLOBAL_COPTS","GLOBAL_LOCAL_DEFINES","GLOBAL_LINKOPTS",)

load ("//:cc_combine.bzl", "cc_combine")

package(default_visibility = ["//visibility:public"])

COMMON_LINKOPTS = GLOBAL_LINKOPTS + []

COMMON_LOCAL_DEFINES = GLOBAL_LOCAL_DEFINES + [
    "KNL_PREFIX",
    "WSEC_AES_GCM_SUPPORT",
    "WSEC_COMPILE_CAC_OPENSSL",
    "WSEC_COMPILE_MIP_OTHER",
    "WSEC_DEBUG",
    "WSEC_ERR_CODE_BASE=0x10000000",
    "WSEC_TRACE_MEMORY",
    "WSEC_USE_OPENSSL_110",
    "_CANTIAN_LCOV_TEST_",
    "_CMS_LCOV_TEST_",
    "_DEBUG",
    "_GNU_SOURCE",
    "_LARGEFILE64_SOURCE",
    "_REENTRANT",
]

COMMON_COPTS = GLOBAL_COPTS + [
    "-std=c99",
    "-g",
    "-ldl",
    "-pthread",
    "-g",
    "-mtune=nocona",
    "-fsigned-char",
    "-msse4.2",
    "-fprofile-arcs",
    "-ftest-coverage",
    "-fPIC",
    "-Wall",
    "-MMD",
    "-fno-strict-aliasing",
    "-fms-extensions",
    "-fvisibility=default",
    "-fstack-protector-strong",
    "--param",
    "ssp-buffer-size=4",
    "-fno-common",
    "-Wtrampolines",
    "-freg-struct-return",
    "-pipe",
    #"-Werror",  #TODO
    "-Wno-psabi",
    "-Wno-stringop-overflow",
]

cc_binary (
    name = "cms",
    srcs = [
        "//pkg/src:version/gs_version.c",
        "cms/cms_blackbox.c",
        "cms/cms_cmd_upgrade.c",
        "cms/cms_cmd_imp.c",
        "cms/cms_detect_error.c",
        "cms/cms_disk_lock.c",
        "cms/cms_gcc.c",
        "cms/cms_gcc_exp.c",
        "cms/cms_gcc_imp.c",
        "cms/cms_instance.c",
        "cms/cms_iofence.c",
        "cms/cms_log.c",
        "cms/cms_main.c",
        "cms/cms_mes.c",
        "cms/cms_node_fault.c",
        "cms/cms_param.c",
        "cms/cms_stat.c",
        "cms/cms_syncpoint_inject.c",
        "cms/cms_uds_server.c",
        "cms/cms_vote.c",
        "cms/cms_work.c",
        "interface/cms_comm.c",
        "interface/cms_interface.c",
        "interface/cms_msgque.c",
        "interface/cms_socket.c",
        "interface/cms_sync.c",
        "interface/cms_uds_client.c",
        ":interface_hdrs",
        ":cms_hdrs",
        "//platform:huawei_security_hdrs",
        "//pkg/src/common:common_hdrs",
        "//pkg/src/common:variant_hdrs",
        "//pkg/src/mec:mec_hdrs",
        "//pkg/src/kernel:common",
        "//pkg/src/kernel:include",
        "//pkg/src/common:libzecommon.so",
        "//pkg/src/protocol:libzeprotocol.so",
    ],
    linkstatic = True,
    local_defines = [
        "GETDBVERSION=cantiand_get_dbversion",
    ] + COMMON_LOCAL_DEFINES,
    copts =  [
        '-DGS_LIB_VERSION="static char* str_GS_LIB_VERSION=\'Cantian Debug 2.0.0 a1d2efcd5a\'"',
        "-fPIE",
        "-Ipkg/src/cms/interface",
        "-Ipkg/src/cms/cms",
        "-Iplatform/huawei_security/include",
        "-Ipkg/src/common/variant",
        "-Ipkg/src/common",
        "-Ipkg/src/protocol",
        "-Ilibrary/xnet/include",
        "-Ilibrary/dbstor/include/dbstor",
        "-Ipkg/src/mec",
        "-Ipkg/src/kernel/common",
        "-Ipkg/src/kernel/include",
        "-Ipkg/src/upgrade_check",
    ] + COMMON_COPTS,
    linkopts = [
        "-std=c99",
        "-g",
        "-ldl",
        "-pthread",
        "-g",
        "-pie",
        "-fprofile-arcs",
        "-ftest-coverage",
        "-Wl,-z,noexecstack",
        "-Wl,-z,relro",
        "-Wl,-z,now",
        "-Wl,-Bsymbolic",
        "-rdynamic",
        "-lm",
        "-lrt",
        "-lpthread",
        "-ldl",
    ] + COMMON_LINKOPTS,
    deps = [
        "//pkg/src/rc:zerc",
        "//pkg/src/mec:zemes",
        ":zecms",
        "//library:z",
        "//library:cgw_client",
        "//library:dbstorClient",
        "//library:dbstor_tool",
        "//library:nomlnx/xnetlite",
        "//library:iod",
        "//library:lwt",
        "//library:dplog",
        "//library:ftds_stub",
        "//library:ftdsclient",
        "//library:dposax",
        "//library:securec",
        "//library:scpart_mgr",
        "//library:mxml",
        "//library:dpdiagnose",
        "//library:patmatch",
        "//library:dpumm_mm",
        "//library:dphpuc_roc",
        "//library:dptracepoint",
        "//library:dpumm_cmm",
        "//library:osax_util",
        "//library:dswcore_mem",
        "//library:byte_buffer",
        "//library:simpopb",
        "//library:dntf",
        "//library:dposen",
        "//library:cmclient",
        "//library:kmc",
        "//library:kmcext",
        "//library:sdp",
        "//library:fdsa",
        "//library:fdsa_util",
        "//library:dif_usr",
        "//library:sqlite3",
    ],
)

cc_library (
    name = "zecms",
    srcs = [
        "interface/cms_comm.c",
        "interface/cms_interface.c",
        "interface/cms_msgque.c",
        "interface/cms_socket.c",
        "interface/cms_sync.c",
        "interface/cms_uds_client.c",
        ":interface_hdrs",
        ":cms_hdrs",
        "//platform:huawei_security_hdrs",
        "//pkg/src/common:common_hdrs",
        "//pkg/src/common:variant_hdrs",
        "//pkg/src/protocol:protocol_hdrs",
        "//library:dbstor/include/dbstor",
        "//library:xnet/include",
    ],
    linkstatic = True,
    local_defines = COMMON_LOCAL_DEFINES,
    copts = [
        "-Ipkg/src/cms/interface",
        "-Ipkg/src/cms/cms",
        "-Iplatform/huawei_security/include",
        "-Ipkg/src/common/variant",
        "-Ipkg/src/common",
        "-Ipkg/src/protocol",
        "-Ilibrary/xnet/include",
        "-Ilibrary/dbstor/include/dbstor",
    ] + COMMON_COPTS,
    linkopts = [] + COMMON_LINKOPTS,
)

cc_library (
    name = "zecmssrc",
    srcs = [
        "cms/cms_blackbox.c",
        "cms/cms_cmd_imp.c",
        "cms/cms_detect_error.c",
        "cms/cms_disk_lock.c",
        "cms/cms_gcc.c",
        "cms/cms_gcc_exp.c",
        "cms/cms_gcc_imp.c",
        "cms/cms_instance.c",
        "cms/cms_iofence.c",
        "cms/cms_log.c",
        "cms/cms_main.c",
        "cms/cms_mes.c",
        "cms/cms_node_fault.c",
        "cms/cms_param.c",
        "cms/cms_stat.c",
        "cms/cms_syncpoint_inject.c",
        "cms/cms_uds_server.c",
        "cms/cms_vote.c",
        "cms/cms_work.c",
        "cms/cms_cmd_upgrade.c",
        ":interface_hdrs",
        ":cms_hdrs",
        "//platform:huawei_security_hdrs",
        "//pkg/src/common:common_hdrs",
        "//pkg/src/common:variant_hdrs",
        "//pkg/src/upgrade_check",
        "//pkg/src/protocol:protocol_hdrs",
        "//library:dbstor/include/dbstor",
        "//library:xnet/include",
        "//pkg/src/mec:mec_hdrs",
        "//pkg/src/kernel:common",
        "//pkg/src/kernel:include",
    ],
    linkstatic = True,
    local_defines = COMMON_LOCAL_DEFINES,
    copts = [
        "-Ipkg/src/cms/interface",
        "-Ipkg/src/cms/cms",
        "-Ilibrary/dbstor",
        "-Ipkg/src/upgrade_check",
        "-Iplatform/huawei_security/include",
        "-Ipkg/src/common/variant",
        "-Ipkg/src/common",
        "-Ipkg/src/protocol",
        "-Ipkg/src/kernel/common",
        "-Ipkg/src/kernel/include",
        "-Ipkg/src/mec",
        "-Ilibrary/xnet/include",
        "-Ilibrary/dbstor/include/dbstor",
    ] + COMMON_COPTS,
    linkopts = [] + COMMON_LINKOPTS,
)

filegroup(
    name = "interface_hdrs",
    srcs = glob(["interface/*.h"]),
)

filegroup(
    name = "cms_hdrs",
    srcs = glob(["cms/*.h"]),
)
