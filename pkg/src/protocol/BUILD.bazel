# Generated by cmake2bazel.

# Caesar Task Force@Data Storage Product Line

load ("//:global_options.bzl","GLOBAL_COPTS","GLOBAL_LOCAL_DEFINES","GLOBAL_LINKOPTS",)

load ("//:cc_combine.bzl", "cc_combine")

package(default_visibility = ["//visibility:public"])

exports_files([
   "cs_pipe.c",
   "cs_listener.c",
   "cs_rdma.c",
   "cs_ipc.c",
   "cs_ssl.c",
   "cs_uds.c",
   "cs_tcp.c",
   "cs_protocol.c",
])

COMMON_LINKOPTS = GLOBAL_LINKOPTS + []

COMMON_LOCAL_DEFINES = GLOBAL_LOCAL_DEFINES + [
    "KNL_PREFIX",
    "WSEC_AES_GCM_SUPPORT",
    "WSEC_COMPILE_CAC_OPENSSL",
    "WSEC_COMPILE_MIP_OTHER",
    "WSEC_DEBUG",
    "WSEC_ERR_CODE_BASE=0x10000000",
    "WSEC_TRACE_MEMORY",
    "WSEC_USE_OPENSSL_110",
    "_CANTIAN_LCOV_TEST_",
    "_CMS_LCOV_TEST_",
    "_DEBUG",
    "_GNU_SOURCE",
    "_LARGEFILE64_SOURCE",
    "_REENTRANT",
]

COMMON_COPTS = GLOBAL_COPTS + [
    "-std=c99",
    "-g",
    "-ldl",
    "-pthread",
    "-g",
    "-fPIC",
    "-mtune=nocona",
    "-fsigned-char",
    "-msse4.2",
    "-fprofile-arcs",
    "-ftest-coverage",
    "-fPIC",
    "-Wall",
    "-MMD",
    "-fno-strict-aliasing",
    "-fms-extensions",
    "-fvisibility=default",
    "-fstack-protector-strong",
    "--param",
    "ssp-buffer-size=4",
    "-fno-common",
    "-Wtrampolines",
    "-freg-struct-return",
    "-pipe",
    "-Werror",
    "-Wno-psabi",
    "-Wno-stringop-overflow",
    "-Iopen_source/libaio/include",
    "-Iopen_source/openssl/include/openssl",
    "-Iplatform/huawei_kmc/include",
    "-Iplatform/huawei_security/include",
    "-Ibuild_dependence/libaio/include",
    "-Ipkg/src/common/variant",
    "-Ipkg/src/common",
]

filegroup(
    name = "zeprotocol_srcs",
    srcs = [
        "cs_ipc.c",
        "cs_listener.c",
        "cs_pipe.c",
        "cs_protocol.c",
        "cs_rdma.c",
        "cs_ssl.c",
        "cs_tcp.c",
        "cs_uds.c",
    ] + [
        ":protocol_hdrs",
        "//pkg/src/common:common_hdrs",
        "//pkg/src/common:variant_hdrs",
        "//platform:huawei_security_hdrs",
        "//build_dependence:libaio/include",
        "//:open_source/openssl/include/openssl",
    ],
)

cc_binary(
    name = "libzeprotocol.so",
    srcs = [
        ":zeprotocol_srcs",
        "//pkg/src/common:libzecommon.so",
    ],
    local_defines = COMMON_LOCAL_DEFINES,
    copts = COMMON_COPTS,
    linkopts = [
        "-pie",
        "-fprofile-arcs",
        "-ftest-coverage",
        "-Wl,-z,noexecstack",
        "-Wl,-z,relro",
        "-Wl,-z,now",
        "-Wl,-Bsymbolic",
        "-rdynamic",
        "-lpthread",
        "-lm",
        "-lrt",
    ] + COMMON_LINKOPTS,
    deps = [
        "//library:cgw_client",
        "//library:dbstorClient",
        "//library:dbstor_tool",
        "//library:nomlnx/xnetlite",
        "//library:iod",
        "//library:lwt",
        "//library:dplog",
        "//library:ftds_stub",
        "//library:ftdsclient",
        "//library:dposax",
        "//library:securec",
        "//library:scpart_mgr",
        "//library:mxml",
        "//library:dpdiagnose",
        "//library:patmatch",
        "//library:dpumm_mm",
        "//library:dphpuc_roc",
        "//library:dptracepoint",
        "//library:dpumm_cmm",
        "//library:osax_util",
        "//library:dswcore_mem",
        "//library:byte_buffer",
        "//library:simpopb",
        "//library:dntf",
        "//library:dposen",
        "//library:cmclient",
        "//library:kmc",
        "//library:kmcext",
        "//library:sdp",
        "//library:sqlite3",
    ],
    linkshared = True,
)

cc_library (
    name = "zeprotocol",
    srcs = [
        ":zeprotocol_srcs",
    ],
    linkstatic = True,
    local_defines = COMMON_LOCAL_DEFINES,
    copts = [
    ] + COMMON_COPTS,
    linkopts = [] + COMMON_LINKOPTS,
)

filegroup(
    name = "protocol_hdrs",
    srcs = glob(["*.h"]),
)