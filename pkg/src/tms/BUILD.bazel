# Generated by cmake2bazel.

# Caesar Task Force@Data Storage Product Line

load ("//:global_options.bzl","GLOBAL_COPTS","GLOBAL_LOCAL_DEFINES","GLOBAL_LINKOPTS",)

load ("//:cc_combine.bzl", "cc_combine")

package(default_visibility = ["//visibility:public"])

COMMON_LINKOPTS = GLOBAL_LINKOPTS + []

COMMON_LOCAL_DEFINES = GLOBAL_LOCAL_DEFINES + []

COMMON_COPTS = GLOBAL_COPTS + [
    "-Ipkg/src/cms/interface",
    "-Iopen_source/odbc/include",
    "-Iopen_source/openssl/include/openssl",
    "-Iopen_source/openssl/include",
    "-Iopen_source/lz4/include",
    "-Iplatform/huawei_security/include",
    "-Ipkg/src/common/variant",
    "-Ipkg/src/common",
    "-Ipkg/src/driver",
    "-Ipkg/src/driver/gsc",
    "-Ipkg/src/driver/odbc",
    "-Ipkg/src/protocol",
    "-Ipkg/src/server",
    "-Ipkg/src/server/params",
    "-Ipkg/src/shard",
    "-Ipkg/src/shard/rebalance",
    "-Ipkg/src/shard/ddl",
    "-Ipkg/src/shard/dml",
    "-Ipkg/src/shard/route",
    "-Ipkg/src/shard/adapter",
    "-Ipkg/src/shard/dblink",
    "-Ipkg/src/sql",
    "-Ipkg/src/sql/catalog",
    "-Ipkg/src/sql/executor",
    "-Ipkg/src/sql/json",
    "-Ipkg/src/sql/node",
    "-Ipkg/src/sql/function",
    "-Ipkg/src/sql/optimizer",
    "-Ipkg/src/sql/parallel",
    "-Ipkg/src/sql/parser",
    "-Ipkg/src/sql/parser_ddl",
    "-Ipkg/src/sql/plan",
    "-Ipkg/src/sql/pl",
    "-Ipkg/src/sql/pl/include",
    "-Ipkg/src/sql/pl/clang",
    "-Ipkg/src/sql/pl/debug",
    "-Ipkg/src/sql/pl/meta",
    "-Ipkg/src/sql/pl/persist",
    "-Ipkg/src/sql/pl/type",
    "-Ipkg/src/sql/pl/ast",
    "-Ipkg/src/sql/pl/parser",
    "-Ipkg/src/sql/pl/common",
    "-Ipkg/src/sql/pl/executor",
    "-Ipkg/src/sql/verifier",
    "-Ipkg/src/kernel",
    "-Ipkg/src/kernel/backup",
    "-Ipkg/src/kernel/buffer",
    "-Ipkg/src/kernel/catalog",
    "-Ipkg/src/kernel/common",
    "-Ipkg/src/kernel/daemon",
    "-Ipkg/src/kernel/flashback",
    "-Ipkg/src/kernel/include",
    "-Ipkg/src/kernel/index",
    "-Ipkg/src/kernel/lob",
    "-Ipkg/src/kernel/persist",
    "-Ipkg/src/kernel/replication",
    "-Ipkg/src/kernel/sequence",
    "-Ipkg/src/kernel/statistics",
    "-Ipkg/src/kernel/table",
    "-Ipkg/src/kernel/tablespace",
    "-Ipkg/src/kernel/xact",
    "-Ipkg/src/mec",
    "-Ipkg/src/ctc",
    "-Ilibrary/xnet/include",
    "-Ilibrary/dbstor/include/infrastructure/infrastructure/dpuc",
    "-Ilibrary/xnet/include/vos_win/vos",
    "-Ilibrary/dbstor/include/infrastructure/infrastructure/log",
    "-Ilibrary/dbstor/include/infrastructure/infrastructure/osax",
    "-Ilibrary/dbstor/include/infrastructure",
    "-Ilibrary/dbstor/include/infrastructure/infrastructure/umm",
]

cc_library (
    name = "zetms",
    srcs = [
        "tms_monitor.c",
        "tms_sig_calltrace.c",
        ":tms_hdrs",
        "//pkg/src/cms:interface_hdrs",
        "//library:xnet/include",
        "//library:dbstor/include/infrastructure/infrastructure/osax",
        "//library:dbstor/include/infrastructure/infrastructure/dpuc",
        "//library:dbstor/include/infrastructure/infrastructure/umm",
        "//library:dbstor/include/infrastructure/infrastructure/log",
        "//library:dbstor/include/infrastructure",
        "//pkg/src/common:variant_hdrs",
        "//pkg/src/common:common_hdrs",
        "//pkg/src/server:server_hdrs",
        "//pkg/src/server:params",
        "//pkg/src/shard:shard_hdrs",
        "//pkg/src/ctc:ctc_hdrs",
        "//pkg/src/cluster:cluster_hdrs",
        "//pkg/src/sql:sql_hdrs",
        "//pkg/src/sql:pl",
        "//pkg/src/sql:parser",
        "//pkg/src/sql:node",
        "//pkg/src/sql:verifier",
        "//pkg/src/sql:json",
        "//pkg/src/sql:parallel",
        "//pkg/src/sql:executor",
        "//platform:huawei_security_hdrs",
        "//pkg/src/upgrade_check",
    ],
    linkstatic = True,
    local_defines = [
        "KNL_PREFIX",
        "WSEC_AES_GCM_SUPPORT",
        "WSEC_COMPILE_CAC_OPENSSL",
        "WSEC_COMPILE_MIP_OTHER",
        "WSEC_DEBUG",
        "WSEC_ERR_CODE_BASE=0x10000000",
        "WSEC_TRACE_MEMORY",
        "WSEC_USE_OPENSSL_110",
        "_CANTIAN_LCOV_TEST_",
        "_CMS_LCOV_TEST_",
        "_DEBUG",
        "_GNU_SOURCE",
        "_LARGEFILE64_SOURCE",
        "_REENTRANT",
    ] + COMMON_LOCAL_DEFINES,
    copts = [
        "-D__LINUX_USR__",
        "-g",
        "-fPIC",
        "-mtune=nocona",
        "-fsigned-char",
        "-msse4.2",
        "-fprofile-arcs",
        "-ftest-coverage",
        "-fPIC",
        "-Wall",
        "-MMD",
        "-fno-strict-aliasing",
        "-fms-extensions",
        "-fvisibility=default",
        "-fstack-protector-strong",
        "--param",
        "ssp-buffer-size=4",
        "-fno-common",
        "-Wtrampolines",
        "-freg-struct-return",
        "-pipe",
        "-Werror",
        "-Wno-psabi",
        "-Wno-stringop-overflow",
        "-Ipkg/src/cluster",
        "-Ipkg/src/rc",
    ] + COMMON_COPTS,
    linkopts = COMMON_LINKOPTS,
    deps = [
        "//library:z",
        "//library:zstd",
        "//library:lz4",
        "//library:gtest",
        "//library:gmock",
        "//library:mockcpp",
        "//library:protobuf-c",
        "//library:cgw_client",
        "//library:dbstorClient",
        "//library:dbstor_tool",
        "//library:nomlnx/xnetlite",
        "//library:iod",
        "//library:lwt",
        "//library:dplog",
        "//library:ftds_stub",
        "//library:ftdsclient",
        "//library:dposax",
        "//library:securec",
        "//library:scpart_mgr",
        "//library:mxml",
        "//library:dpdiagnose",
        "//library:patmatch",
        "//library:dpumm_mm",
        "//library:dphpuc_roc",
        "//library:dptracepoint",
        "//library:dpumm_cmm",
        "//library:osax_util",
        "//library:dswcore_mem",
        "//library:byte_buffer",
        "//library:simpopb",
        "//library:dntf",
        "//library:dposen",
        "//library:cmclient",
        "//library:kmc",
        "//library:kmcext",
        "//library:sdp",
        "@com_google_googletest//:googletest_inc",
        "@com_google_googletest//:googlemock_inc",
        "//pkg/test/unit_test:mockcpp_3rdparty_inc",
        "//pkg/test/unit_test:mockcpp_include_inc",
        "//library:sqlite3",
    ],
)

filegroup(
    name = "tms_hdrs",
    srcs = glob(["*.h"]),
)