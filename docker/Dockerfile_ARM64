# 第一阶段：构建阶段
FROM openeuler/openeuler:22.03-lts-sp1 AS buildtag

WORKDIR /tool

# 配置 yum 和 wget 不检查证书
RUN yum clean all && \
    echo 'sslverify=False' >> /etc/yum.conf && \
    touch /root/.wgetrc && \
    echo 'check_certificate = off' >> /root/.wgetrc && \
    yum update -y && \
    yum install -y wget git

# 克隆仓库并合并 boost 文件
RUN git clone https://gitee.com/cantian-repo/dockerbuild.git && \
    cd dockerbuild/third_party && \
    cat boost_1_73_0a* > boost_1_73_0.zip && \
    rm -rf boost_1_73_0a* && \
    mv * /tool && \
    cd - && \
    rm -rf dockerbuild

# 第二阶段：最终镜像
FROM openeuler/openeuler:22.03-lts-sp1

ARG BUILD=debug
WORKDIR /tools

# 从构建阶段复制文件
COPY --from=buildtag /tool/*.gz /tools/
COPY --from=buildtag /tool/*.zip /tools/

# 安装依赖并编译
RUN tar -zxvf rpcsvc-proto-1.4.tar.gz && \
    tar -zxf doxygen-1.9.2.src.tar.gz && \
    yum clean all && \
    echo 'sslverify=False' >> /etc/yum.conf && \
    touch /root/.wgetrc && \
    echo 'check_certificate = off' >> /root/.wgetrc && \
    yum update -y && \
    yum install -y vim make gcc gcc-c++ gdb gdb-gdbserver \
    python3 python3-devel git net-tools cmake \
    tree mlocate psmisc sudo perf gawk perl-open perl wget unzip \
    ndctl ndctl-libs ndctl-devel ncurses ncurses-devel libtirpc-devel \
    python3-pip jq nc libaio-devel openssl openssl-devel \
    libibverbs libibumad libibmad \
    openssh-server dnf-plugins-core dnf-utils ant maven bison  \
    libcap-devel expect nfs-utils iputils iproute && \
    unzip boost_1_73_0.zip && \
    python3 -m pip install --user --upgrade pip && \
    yum group install -y "Development Tools" && \
    pip3 install cryptography pyOpenSSL && \
    /usr/bin/ssh-keygen -A && \
    debuginfo-install -y libibverbs \
    librdmacm libibumad libibmad rdma-core-devel && \
    yum clean all &> /dev/null && \
    cd rpcsvc-proto-1.4 && \
    ./configure && make && make install && cd - && \
    rm -rf rpcsvc-proto-1.4 && \
    cd doxygen-1.9.2 && mkdir build && cd build && \
    cmake -G "Unix Makefiles" .. && make && cd ../.. && \
    rm -rf doxygen-1.9.2 && \
    echo 'export PYTHON3_HOME=/usr/include/python3.6m' >> /etc/profile && \
    source /etc/profile && \
    touch /opt/bashrc && \
    echo 'ln /dev/sdb /dev/gss-disk1 2>/dev/null' >> /opt/bashrc && \
    echo 'chmod 777 /dev/gss-disk1' >> /opt/bashrc && \
    echo 'chmod 666 /var/run/docker.sock' >> /opt/bashrc && \
    sed -i -e 's/^#Port 22/Port 2200/g' \
    -e 's/^SyslogFacility AUTHPRIV/#SyslogFacility AUTHPRIV/g' \
    -e 's/^#SyslogFacility AUTH/SyslogFacility AUTH/g' \
    -e 's/^UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config && \
    rm -rf /tools/*.gz /tools/*.zip

# 设置卷和工作目录
VOLUME /var/lib/mysql
WORKDIR /home/regress

# 暴露端口
EXPOSE 3306 33060